steps:
  - commands:
      - ". $HOME/.asdf/asdf.sh"
      - "asdf local erlang 22.1.8"
      - "make compile"
      - "make ci"
    name: ":hammer: build"
    key: "tests"
    agents:
      queue: "erlang"
    artifact_paths:
      - "artifacts/*"

  - if: build.tag =~ /\/_GA$/
    name: ":whale: AMD64 docker"
    env:
      REGISTRY_HOST: "quay.io"
      REGISTRY_NAME: "miner"
      IMAGE_FORMAT: "docker"
      IMAGE_ARCH: "amd64"
    agents:
      queue: "erlang"
    commands:
      - "git fetch -t"
      - ".buildkite/scripts/make_image.sh"

  - if: build.tag =~ /\/_GA$/
    name: ":open_file_folder: AMD64 open container image"
    artifact_paths: "*-oci.tar"
    env:
      REGISTRY_HOST: "quay.io"
      REGISTRY_NAME: "oci-miner"
      IMAGE_FORMAT: "oci"
      IMAGE_ARCH: "amd64"
    agents:
      queue: "erlang"
    commands:
      - "git fetch -t"
      - ".buildkite/scripts/make_image.sh"


# There is some kind of compiler bug in 32 bit ARM
# and rocksdb, so comment out for now. Can revisit
# later if need be.
#
#  - if: build.tag != null
#    name: ":whale: ARM32 docker"
#   agents:
#     queue: "erlang"
#    env:
#      - MINER_REGISTRY_NAME: "quay.io/team-helium/miner"
#      - IMAGE_FORMAT: "docker"
#      - IMAGE_ARCH: "arm32"
#   commands:
#     - "git fetch -t"
#     - ".buildkite/scripts/make_image.sh"
  - if: build.tag =~ /\/_GA$/
    name: ":whale: ARM64 docker"
    agents:
      queue: "erlang"
    env:
      REGISTRY_HOST: "quay.io"
      REGISTRY_NAME: "miner"
      IMAGE_FORMAT: "docker"
      IMAGE_ARCH: "arm64"
    commands:
      - "git fetch -t"
      - ".buildkite/scripts/make_image.sh"

  - if: build.tag =~ /\/_GA$/
    name: ":open_file_folder: ARM64 open container image"
    artifact_paths: "*-oci.tar"
    env:
      REGISTRY_HOST: "quay.io"
      REGISTRY_NAME: "oci-miner"
      IMAGE_FORMAT: "oci"
      IMAGE_ARCH: "arm64"
    agents:
      queue: "erlang"
    commands:
      - "git fetch -t"
      - ".buildkite/scripts/make_image.sh"
